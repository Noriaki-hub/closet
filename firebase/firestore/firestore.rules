rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {


    //ログイン認証
    function isAuthenticated() {
      return request.auth != null;
    }

    //本人確認
    function isUserAuthenticated(userId) {
      return request.auth.uid == userId;
    }
    


    //users
    match /users/{userId} {
       allow create, update: if isUserAuthenticated(userId);
       allow read: if isAuthenticated();

      match /follow/{followId} {
       allow create, delete: if isUserAuthenticated(userId);
       allow read: if isAuthenticated();
      }

      match /follower/{followerId} {
       allow create, delete: if isUserAuthenticated(resource.data.uid);
       allow read: if isAuthenticated();
      }

      match /media/{mediaId} {
       allow create, read, update, delete: if isUserAuthenticated(userId);
      }

      match /shop/{shopId} {
       allow create, read, update, delete: if isUserAuthenticated(userId);
      }
    }

    //clothes
    match /clothes/{clothesId} {
       allow create, update, delete: if isUserAuthenticated(resource.data.uid);
       allow read: if isAuthenticated();

      match /like/{likeId} {
       allow create, delete: if isUserAuthenticated(resource.data.uid);
       allow read: if isAuthenticated();
      }
    }

    //share
     match /share/{shareId} {
       allow create, delete: if isUserAuthenticated(resource.data.uid);
       allow read: if isAuthenticated();
     }
  }
}